/*! tailwindcss v4.1.5 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))) {

    *,
    :before,
    :after,
    ::backdrop {
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial
    }
  }
}

@layer theme {

  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-amber-300: oklch(87.9% .169 91.605);
    --color-blue-900: oklch(37.9% .146 265.522);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-black: #000;
    --spacing: .25rem;
    --font-weight-normal: 400;
    --radius-sm: .25rem;
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono)
  }
}

@layer base {

  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0
  }

  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit
  }

  b,
  strong {
    font-weight: bolder
  }

  code,
  kbd,
  samp,
  pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em
  }

  small {
    font-size: 80%
  }

  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative
  }

  sub {
    bottom: -.25em
  }

  sup {
    top: -.5em
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse
  }

  :-moz-focusring {
    outline: auto
  }

  progress {
    vertical-align: baseline
  }

  summary {
    display: list-item
  }

  ol,
  ul,
  menu {
    list-style: none
  }

  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block
  }

  img,
  video {
    max-width: 100%;
    height: auto
  }

  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px
  }

  ::file-selector-button {
    margin-inline-end: 4px
  }

  ::placeholder {
    opacity: 1
  }

  @supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px) {
    ::placeholder {
      color: currentColor
    }

    @supports (color:color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent)
      }
    }
  }

  textarea {
    resize: vertical
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit
  }

  ::-webkit-datetime-edit {
    display: inline-flex
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0
  }

  ::-webkit-datetime-edit {
    padding-block: 0
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0
  }

  :-moz-ui-invalid {
    box-shadow: none
  }

  button,
  input:where([type=button], [type=reset], [type=submit]) {
    appearance: button
  }

  ::file-selector-button {
    appearance: button
  }

  ::-webkit-inner-spin-button {
    height: auto
  }

  ::-webkit-outer-spin-button {
    height: auto
  }

  [hidden]:where(:not([hidden=until-found])) {
    display: none !important
  }

  :where(:root),
  :root:has(input.theme-controller[value=light]:checked),
  [data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% .006 285.885);
    --color-primary: oklch(45% .24 277.023);
    --color-primary-content: oklch(93% .034 272.788);
    --color-secondary: oklch(65% .241 354.308);
    --color-secondary-content: oklch(94% .028 342.258);
    --color-accent: oklch(77% .152 181.912);
    --color-accent-content: oklch(38% .063 188.416);
    --color-neutral: oklch(14% .005 285.823);
    --color-neutral-content: oklch(92% .004 286.32);
    --color-info: oklch(74% .16 232.661);
    --color-info-content: oklch(29% .066 243.157);
    --color-success: oklch(76% .177 163.223);
    --color-success-content: oklch(37% .077 168.94);
    --color-warning: oklch(82% .189 84.429);
    --color-warning-content: oklch(41% .112 45.904);
    --color-error: oklch(71% .194 13.428);
    --color-error-content: oklch(27% .105 12.094);
    --radius-selector: .5rem;
    --radius-field: .25rem;
    --radius-box: .5rem;
    --size-selector: .25rem;
    --size-field: .25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0
  }

  :root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*=drawer-open])>.drawer-toggle:checked) {
    overflow: hidden
  }

  :root,
  [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content)
  }

  :root {
    scrollbar-color: currentColor #0000
  }

  @supports (color:color-mix(in lab, red, red)) {
    :root {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000)#0000
    }
  }

  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }

  :where(:root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open)>.drawer-toggle:checked)) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --root-bg: var(--color-base-100)
  }

  @supports (color:color-mix(in lab, red, red)) {
    :where(:root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open)>.drawer-toggle:checked)) {
      --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%)
    }
  }

  :where(.modal[open], .modal-open, .modal-toggle:checked+.modal):not(.modal-start, .modal-end) {
    scrollbar-gutter: stable
  }

  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E")
  }

  .chat {
    --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e")
  }
}

@layer components;

@layer utilities {
  .btn {
    cursor: pointer;
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    -webkit-user-select: none;
    user-select: none;
    padding-inline: var(--btn-p);
    color: var(--btn-fg);
    --tw-prose-links: var(--btn-fg);
    height: var(--size);
    font-size: var(--fontsize, .875rem);
    outline-color: var(--btn-color, var(--color-base-content));
    background-color: var(--btn-bg);
    background-size: auto, calc(var(--noise)*100%);
    background-image: none, var(--btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--btn-border);
    text-shadow: 0 .5px oklch(100% 0 0/calc(var(--depth)*.15));
    touch-action: manipulation;
    box-shadow: 0 .5px 0 .5px oklch(100% 0 0/calc(var(--depth)*6%)) inset, var(--btn-shadow);
    --size: calc(var(--size-field, .25rem)*10);
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-fg: var(--color-base-content);
    --btn-p: 1rem;
    --btn-border: var(--btn-bg);
    --btn-shadow: 0 3px 2px -2px var(--btn-bg), 0 4px 3px -2px var(--btn-bg);
    --btn-noise: var(--fx-noise);
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    flex-wrap: nowrap;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    gap: .375rem;
    font-weight: 600;
    transition-property: color, background-color, border-color, box-shadow;
    transition-duration: .2s;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    display: inline-flex
  }

  :where(.btn) {
    width: unset
  }

  @supports (color:color-mix(in lab, red, red)) {
    .btn {
      --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth)*5%));
      --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg)calc(var(--depth)*30%), #0000), 0 4px 3px -2px color-mix(in oklab, var(--btn-bg)calc(var(--depth)*30%), #0000)
    }
  }

  .prose .btn {
    text-decoration-line: none
  }

  @media (hover:hover) {
    .btn:hover {
      --btn-bg: var(--btn-color, var(--color-base-200))
    }

    @supports (color:color-mix(in lab, red, red)) {
      .btn:hover {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%)
      }
    }
  }

  .btn:focus-visible {
    isolation: isolate;
    outline-width: 2px;
    outline-style: solid
  }

  .btn:active:not(.btn-active) {
    --btn-bg: var(--btn-color, var(--color-base-200));
    --btn-border: var(--btn-color, var(--color-base-200));
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    translate: 0 .5px
  }

  @supports (color:color-mix(in lab, red, red)) {
    .btn:active:not(.btn-active) {
      --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
      --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%)
    }
  }

  .btn:is(:disabled, [disabled], .btn-disabled) {
    pointer-events: none;
    --btn-border: #0000;
    --btn-noise: none;
    --btn-fg: var(--color-base-content)
  }

  .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
    background-color: var(--color-base-content);
    box-shadow: none
  }

  @supports (color:color-mix(in lab, red, red)) {
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
      background-color: color-mix(in oklab, var(--color-base-content)10%, transparent)
    }

    .btn:is(:disabled, [disabled], .btn-disabled) {
      --btn-fg: color-mix(in oklch, var(--color-base-content)20%, #0000)
    }
  }

  @media (hover:hover) {
    .btn:is(:disabled, [disabled], .btn-disabled):hover {
      pointer-events: none;
      background-color: var(--color-neutral);
      --btn-border: #0000;
      --btn-fg: var(--color-base-content)
    }

    @supports (color:color-mix(in lab, red, red)) {
      .btn:is(:disabled, [disabled], .btn-disabled):hover {
        background-color: color-mix(in oklab, var(--color-neutral)20%, transparent);
        --btn-fg: color-mix(in oklch, var(--color-base-content)20%, #0000)
      }
    }
  }

  .btn:is(input[type=checkbox], input[type=radio]) {
    appearance: none
  }

  .btn:is(input[type=checkbox], input[type=radio]):after {
    content: attr(aria-label)
  }

  .btn:where(input:checked:not(.filter .btn)) {
    --btn-color: var(--color-primary);
    --btn-fg: var(--color-primary-content);
    isolation: isolate
  }

  .card {
    border-radius: var(--radius-box);
    outline-offset: 2px;
    outline: 0 solid #0000;
    flex-direction: column;
    transition: outline .2s ease-in-out;
    display: flex;
    position: relative
  }

  .card:focus {
    --tw-outline-style: none;
    outline-style: none
  }

  @media (forced-colors:active) {
    .card:focus {
      outline-offset: 2px;
      outline: 2px solid #0000
    }
  }

  .card:focus-visible {
    outline-color: currentColor
  }

  .card :where(figure:first-child) {
    border-start-start-radius: inherit;
    border-start-end-radius: inherit;
    border-end-end-radius: unset;
    border-end-start-radius: unset;
    overflow: hidden
  }

  .card :where(figure:last-child) {
    border-start-start-radius: unset;
    border-start-end-radius: unset;
    border-end-end-radius: inherit;
    border-end-start-radius: inherit;
    overflow: hidden
  }

  .card:where(.card-border) {
    border: var(--border)solid var(--color-base-200)
  }

  .card:where(.card-dash) {
    border: var(--border)dashed var(--color-base-200)
  }

  .card.image-full {
    display: grid
  }

  .card.image-full>* {
    grid-row-start: 1;
    grid-column-start: 1
  }

  .card.image-full>.card-body {
    color: var(--color-neutral-content);
    position: relative
  }

  .card.image-full :where(figure) {
    border-radius: inherit;
    overflow: hidden
  }

  .card.image-full>figure img {
    object-fit: cover;
    filter: brightness(28%);
    height: 100%
  }

  .card figure {
    justify-content: center;
    align-items: center;
    display: flex
  }

  .card:has(>input:is(input[type=checkbox], input[type=radio])) {
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none
  }

  .card:has(>:checked) {
    outline: 2px solid
  }

  .static {
    position: static
  }

  .col-start-2 {
    grid-column-start: 2
  }

  .container {
    width: 100%
  }

  @media (min-width:40rem) {
    .container {
      max-width: 40rem
    }
  }

  @media (min-width:48rem) {
    .container {
      max-width: 48rem
    }
  }

  @media (min-width:64rem) {
    .container {
      max-width: 64rem
    }
  }

  @media (min-width:80rem) {
    .container {
      max-width: 80rem
    }
  }

  @media (min-width:96rem) {
    .container {
      max-width: 96rem
    }
  }

  .divider {
    white-space: nowrap;
    height: 1rem;
    margin: var(--divider-m, 1rem 0);
    --divider-color: var(--color-base-content);
    flex-direction: row;
    align-self: stretch;
    align-items: center;
    display: flex
  }

  @supports (color:color-mix(in lab, red, red)) {
    .divider {
      --divider-color: color-mix(in oklab, var(--color-base-content)10%, transparent)
    }
  }

  .divider:before,
  .divider:after {
    content: "";
    background-color: var(--divider-color);
    flex-grow: 1;
    width: 100%;
    height: .125rem
  }

  @media print {

    .divider:before,
    .divider:after {
      border: .5px solid
    }
  }

  .divider:not(:empty) {
    gap: 1rem
  }

  .m-5 {
    margin: calc(var(--spacing)*5)
  }

  .filter {
    flex-wrap: wrap;
    display: flex
  }

  .filter input[type=radio] {
    width: auto
  }

  .filter input {
    opacity: 1;
    transition: margin .1s, opacity .3s, padding .3s, border-width .1s;
    overflow: hidden;
    scale: 1
  }

  .filter input:not(:last-child) {
    margin-inline-end: .25rem
  }

  .filter input.filter-reset {
    aspect-ratio: 1
  }

  .filter input.filter-reset:after {
    content: "×"
  }

  .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset,
  .filter:not(:has(input:checked:not(.filter-reset))) input[type=reset],
  .filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type=reset]) {
    opacity: 0;
    border-width: 0;
    width: 0;
    margin-inline: 0;
    padding-inline: 0;
    scale: 0
  }

  .mx-auto {
    margin-inline: auto
  }

  .my-4 {
    margin-block: calc(var(--spacing)*4)
  }

  .join-item:where(:not(:first-child, :disabled, [disabled], .btn-disabled)) {
    margin-block-start: 0;
    margin-inline-start: calc(var(--border, 1px)*-1)
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing)*3)
  }

  .status {
    aspect-ratio: 1;
    border-radius: var(--radius-selector);
    background-color: var(--color-base-content);
    vertical-align: middle;
    color: #0000004d;
    background-position: 50%;
    background-repeat: no-repeat;
    background-image: radial-gradient(circle at 35% 30%, oklch(1 0 0/calc(var(--depth)*.5)), #0000);
    width: .5rem;
    height: .5rem;
    display: inline-block;
    box-shadow: 0 2px 3px -1px
  }

  @supports (color:color-mix(in lab, red, red)) {
    .status {
      background-color: color-mix(in oklab, var(--color-base-content)20%, transparent);
      color: #0000004d
    }

    @supports (color:color-mix(in lab, red, red)) {
      .status {
        color: color-mix(in oklab, var(--color-black)30%, transparent)
      }
    }

    .status {
      box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth)*100%), #0000)
    }
  }

  .card-body {
    padding: var(--card-p, 1.5rem);
    font-size: var(--card-fs, .875rem);
    flex-direction: column;
    flex: auto;
    gap: .5rem;
    display: flex
  }

  .card-body :where(p) {
    flex-grow: 1
  }

  .join {
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    align-items: stretch;
    display: inline-flex
  }

  .join :where(.join-item) {
    border-start-start-radius: var(--join-ss, 0);
    border-start-end-radius: var(--join-se, 0);
    border-end-end-radius: var(--join-ee, 0);
    border-end-start-radius: var(--join-es, 0)
  }

  .join :where(.join-item) * {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field)
  }

  .join>.join-item:where(:first-child),
  .join :first-child:not(:last-child) :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: 0;
    --join-es: var(--radius-field);
    --join-ee: 0
  }

  .join>.join-item:where(:last-child),
  .join :last-child:not(:first-child) :where(.join-item) {
    --join-ss: 0;
    --join-se: var(--radius-field);
    --join-es: 0;
    --join-ee: var(--radius-field)
  }

  .join>.join-item:where(:only-child),
  .join :only-child :where(.join-item) {
    --join-ss: var(--radius-field);
    --join-se: var(--radius-field);
    --join-es: var(--radius-field);
    --join-ee: var(--radius-field)
  }

  .flex {
    display: flex
  }

  .grid {
    display: grid
  }

  .h-6 {
    height: calc(var(--spacing)*6)
  }

  .w-6 {
    width: calc(var(--spacing)*6)
  }

  .cursor-pointer {
    cursor: pointer
  }

  .auto-cols-min {
    grid-auto-columns: min-content
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr))
  }

  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr))
  }

  .grid-cols-\[200px_minmax\(900px\,_1320px\)_100px\] {
    grid-template-columns: 200px minmax(900px, 1320px) 100px
  }

  .flex-row {
    flex-direction: row
  }

  .flex-wrap {
    flex-wrap: wrap
  }

  .place-items-center {
    place-items: center
  }

  .place-items-end {
    place-items: end
  }

  .gap-2 {
    gap: calc(var(--spacing)*2)
  }

  .gap-3 {
    gap: calc(var(--spacing)*3)
  }

  .gap-4 {
    gap: calc(var(--spacing)*4)
  }

  .rounded-sm {
    border-radius: var(--radius-sm)
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px
  }

  .border-none {
    --tw-border-style: none;
    border-style: none
  }

  .border-amber-300 {
    border-color: var(--color-amber-300)
  }

  .border-blue-900 {
    border-color: var(--color-blue-900)
  }

  .border-neutral {
    border-color: var(--color-neutral)
  }

  .border-neutral-content\/50 {
    border-color: var(--color-neutral-content)
  }

  @supports (color:color-mix(in lab, red, red)) {
    .border-neutral-content\/50 {
      border-color: color-mix(in oklab, var(--color-neutral-content)50%, transparent)
    }
  }

  .border-transparent {
    border-color: #0000
  }

  .bg-neutral {
    background-color: var(--color-neutral)
  }

  .bg-neutral-300 {
    background-color: var(--color-neutral-300)
  }

  .bg-neutral-content {
    background-color: var(--color-neutral-content)
  }

  .bg-none {
    background-image: none
  }

  .p-1 {
    padding: calc(var(--spacing)*1)
  }

  .p-2 {
    padding: calc(var(--spacing)*2)
  }

  .p-3 {
    padding: calc(var(--spacing)*3)
  }

  .px-3 {
    padding-inline: calc(var(--spacing)*3)
  }

  .py-3 {
    padding-block: calc(var(--spacing)*3)
  }

  .ps-2 {
    padding-inline-start: calc(var(--spacing)*2)
  }

  .pe-0 {
    padding-inline-end: calc(var(--spacing)*0)
  }

  .leading-3 {
    --tw-leading: calc(var(--spacing)*3);
    line-height: calc(var(--spacing)*3)
  }

  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal)
  }

  .text-neutral-100 {
    color: var(--color-neutral-100)
  }

  .text-neutral-content {
    color: var(--color-neutral-content)
  }

  .uppercase {
    text-transform: uppercase
  }

  .filter {
    filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
  }
}

@layer dropdown {
  .dropdown .dropdown-content.dropdown-content-relative {
    position: relative
  }
}

@font-face {
  font-family: Libre Caslon Text;
  src: local(Libre Caslon Text);
  src: url(/resources/fonts/LibreCaslonText-Italic.ttf)format("truetype");
  font-weight: 700;
  font-style: italic
}

@font-face {
  font-family: Libre Caslon Text;
  src: local(Libre Caslon Text);
  src: url(/resources/fonts/LibreCaslonText-Bold.ttf)format("truetype");
  font-weight: 700;
  font-style: normal
}

@font-face {
  font-family: Libre Caslon Text;
  src: local(Libre Caslon Text);
  src: url(/resources/fonts/LibreCaslonText-Regular.ttf)format("truetype");
  font-weight: 400;
  font-style: normal
}

body {
  font-family: Libre Caslon Text, Times New Roman, Times, serif
}

button.selected .open {
  display: block
}

button.selected .close,
button:not(.selected) .open {
  display: none
}

button:not(.selected) .close {
  display: block
}

body {
  height: calc(100vh + .5px);
  overflow-y: scroll
}

@keyframes dropdown {
  0% {
    opacity: 0
  }
}

@keyframes progress {
  50% {
    background-position-x: -115%
  }
}

@keyframes toast {
  0% {
    opacity: 0;
    scale: .9
  }

  to {
    opacity: 1;
    scale: 1
  }
}

@keyframes rating {

  0%,
  40% {
    filter: brightness(1.05)contrast(1.05);
    scale: 1.1
  }
}

@keyframes radio {
  0% {
    padding: 5px
  }

  50% {
    padding: 3px
  }
}

@keyframes skeleton {
  0% {
    background-position: 150%
  }

  to {
    background-position: -50%
  }
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}