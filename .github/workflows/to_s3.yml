name: Deploy to S3

on:
  push:
    branches:
      - 'main'  # Trigger the workflow on push to the main branch

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full history for accurate diff comparisons

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_SPEAR_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-frontend-spear
          
      # Step 3: Files to S3
            # Option 1: Upload only changed files to S3
      - name: Get list of changed files
        id: changes
        run: |
          git fetch origin main
          git diff --name-only HEAD^ HEAD > changed_files.txt
          cat changed_files.txt
          
      # This will add files to the S3 bucket and also delete files in S3 not in the repo
      - name: Sync changed files in S3
        if: success()
        run: |
          while read file; do
            echo "Attempting to upload $file..."
            if ! aws s3 cp "$file" "s3://spear-front-end/$file" ; then
              echo "File $file not found. Falling back to sync for deletion handling."
              aws s3 sync ./ s3://spear-front-end --delete --exact-timestamps 
            fi
          done < changed_files.txt
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} 

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.SPEAR_CLOUDFRONT_DISTRIBUTION_ID}} \
            --paths "/*"
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} 
          
      # Option 2: Full (re)deployment

      # - name: Sync all files to S3
      #   run: |
      #     aws s3 sync ./ s3://spear-front-end --delete --exact-timestamps 
      #   env:
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} 
          
